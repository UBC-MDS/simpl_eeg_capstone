Traceback (most recent call last):
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 609, in _async_poll_for_reply
    msg = await ensure_async(self.kc.shell_channel.get_msg(timeout=new_timeout))
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 85, in ensure_async
    result = await obj
  File "/opt/miniconda3/lib/python3.8/site-packages/jupyter_client/asynchronous/channels.py", line 48, in get_msg
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/miniconda3/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/miniconda3/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 816, in async_execute_cell
    exec_reply = await self.task_poll_for_reply
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 633, in _async_poll_for_reply
    await self._async_handle_timeout(timeout, cell)
  File "/opt/miniconda3/lib/python3.8/site-packages/nbclient/client.py", line 683, in _async_handle_timeout
    raise CellTimeoutError.error_from_timeout_and_cell(
nbclient.exceptions.CellTimeoutError: A cell timed out while it was being executed, after 30 seconds.
The message was: Cell execution timed out.
Here is a preview of the cell contents:
-------------------
%%capture

anim = connectivity.animate_connectivity(epoch, vmin=-1, vmax=1, pair_list=PAIR_OPTIONS["far_coherence"])

gif_file_path = "../../exports/examples/connectivity.gif"  # change the file path to where you would like to save the file
anim.save(gif_file_path, fps=3, dpi=300)  # set frames per second (fps) and resolution (dpi)
-------------------

